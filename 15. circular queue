#include<iostream>
using namespace std;

const int MAX = 5;

class PizzaParlour {
    int front, rear;
    int orders[MAX];

public:
    PizzaParlour() {
        front = rear = -1;
    }

    bool addOrder(int data);
    void serveOrder();
    void display();
};


bool PizzaParlour::addOrder(int id)
 {
    if (rear == -1)
	 {
        front = rear = 0;
        orders[rear] = id;
        return true;
    } 
	else
	    {
            int pos = (rear + 1) % MAX;
            if (pos == front) {
            cout << "\nCafe is Full. Please wait.\n";
            return false;
        }
		 else 
		 {
            rear = pos;
            orders[rear] = id;
            return true;
         }
    }
}


void PizzaParlour::serveOrder()
 {
    if (front == -1) 
	{
        cout << "\nNo Orders in Cafe. [Cafe is Empty]\n";
        return;
    } 
	else
	 {
        cout << "\nOrder No. " << orders[front] << " is processed.\n";
        if (front == rear) { // only one order
            front = rear = -1;
        } 
		else
		{
            front = (front + 1) % MAX;
        }
    }
}


void PizzaParlour::display() 
{
    if (front == -1) 
	{
        cout << "\nCafe is Empty. No orders.\n";
        return;
    } 
	else 
	{
        cout << "Order Ids: \n";
        for (int i = front; i != rear; i = (i + 1) % MAX)
		 {
            cout << orders[i] << "  ";
         }
        cout << orders[rear];
    }
}

void intro() {
    cout << "\nWelcome to the Pizza Parlour!\n";
}

int main() {
    int ch, id = 0;
    PizzaParlour q;

    do {
        cout << "\n-----------------";
        intro();
        cout << "-----------------";
        cout << "\n****Menu*****\n";
        cout << "1. Accept order\n";
        cout << "2. Serve order\n";
        cout << "3. Display orders\n";
        cout << "4. Exit\n";
        cout << "Choice: ";
        cin >> ch;

        switch (ch) 
		{
        case 1:
            id++;
            if (q.addOrder(id)) 
			{
                cout << "Thank you for the order. Order id is: " << id << endl;
            }
			else 
			{
                id--;
            }
            break;
        case 2:
            q.serveOrder();
            break;
        case 3:
            q.display();
            break;
        }
    }
	 while (ch != 4);

    cout << "\nThank You. Keep Visiting.\n";
    return 0;
}
